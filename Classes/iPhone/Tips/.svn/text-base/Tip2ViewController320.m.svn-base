#import "Tip2ViewController320.h"
#import "TipTableViewCell320.h"
#import "TipViewController320.h"
#import "CheckInViewController320.h"
#import "FSTipsLookup.h"
#import "FSVenueLookup.h"

@implementation Tip2ViewController320

@synthesize venueInfo, venueId;

#pragma mark -
#pragma mark Initialization

/*
- (id)initWithStyle:(UITableViewStyle)style {
    // Override initWithStyle: if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
    if ((self = [super initWithStyle:style])) {
    }
    return self;
}
*/

#pragma mark -
#pragma mark View lifecycle


- (void)viewDidLoad {
    
    [super viewDidLoad];
    
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;  
    
    if (venueInfo != nil) {
        self.title = [NSString stringWithFormat:@"%@", [[venueInfo valueForKey:@"venue"] valueForKey:@"name"]];
    }

	UIBarButtonItem *item = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(addTip:)];
	self.navigationItem.rightBarButtonItem = item;
	[item release];
}


- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    if (venueInfo == nil) {
    
        [[FSVenueLookup sharedInstance] addObserver:self
                                         forKeyPath:@"info"
                                            options:NSKeyValueObservingOptionNew
                                            context:NULL];
        
        [[FSVenueLookup sharedInstance] lookupWithVenueId:venueId];    
    }
}

/*
- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
}
*/

- (void)viewWillDisappear:(BOOL)animated {

	@try {
		[[FSVenueLookup sharedInstance] removeObserver:self forKeyPath:@"info"];
	} @catch (NSException *exception) { }
    
    [[FSVenueLookup sharedInstance] cancel];
    
	[super viewWillDisappear:animated];    
}

/*
- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
}
*/
/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/


#pragma mark -
#pragma mark Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    // Return the number of sections.
    return 1;
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    // Return the number of rows in the section.
    return [[venueInfo valueForKey:@"venue"] valueForKey:@"tips"]?[[[venueInfo valueForKey:@"venue"] valueForKey:@"tips"] count]:0;
}

// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)_tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier1 = @"CellButton";
    
    TipTableViewCell320 *cell = (TipTableViewCell320*)[_tableView dequeueReusableCellWithIdentifier:CellIdentifier1];
    if (cell == nil) {
        cell = [[[TipTableViewCell320 alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier1] autorelease];
    }
    
	cell.tipData = (NSDictionary*)[[[venueInfo valueForKey:@"venue"] valueForKey:@"tips"] objectAtIndex:indexPath.row];
    cell.avatarImageUrl = [(NSDictionary*)[cell.tipData valueForKey:@"user"] valueForKey:@"photo"];
    
    //[cell.tipData setValue:[[info valueForKey:@"venue"] valueForkey:@"name"] forKey:@"venue_name"];
    return cell;
}

/*
// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the specified item to be editable.
    return YES;
}
*/


/*
// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source
        [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:YES];
    }   
    else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
    }   
}
*/


/*
// Override to support rearranging the table view.
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath {
}
*/


/*
// Override to support conditional rearranging of the table view.
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the item to be re-orderable.
    return YES;
}
*/

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    NSMutableDictionary *tip = [[[venueInfo valueForKey:@"venue"] valueForKey:@"tips"] objectAtIndex:indexPath.row];
    return [TipTableViewCell320 calculateHeightWithWidth:320 tipData:tip];
}

#pragma mark -
#pragma mark Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
	
	[self saveState:indexPath];
    
    TipViewController320 *detailViewController = [[TipViewController320 alloc] initWithStyle:UITableViewStyleGrouped];
	detailViewController.tipData = [[[venueInfo valueForKey:@"venue"] valueForKey:@"tips"] objectAtIndex:indexPath.row];
    [self.navigationController pushViewController:detailViewController animated:YES];
    [detailViewController release];
}

#pragma mark -
#pragma mark Handlers

- (void)addTip:(id)sender
{
    CheckInViewController320 *detailViewController = [[CheckInViewController320 alloc] initWithStyle:UITableViewStyleGrouped checkinStyle:CheckInViewControllerStyleTip];
    detailViewController.info = venueInfo;
    UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:detailViewController];
    detailViewController.parentNavigationController = self.navigationController;
    [self.navigationController presentModalViewController:navController animated:YES];
    [detailViewController release];
    [navController release];
}

#pragma mark -
#pragma mark KVO

- (void)observeValueForKeyPath:(NSString *)keyPath
                      ofObject:(id)object
                        change:(NSDictionary *)change
                       context:(void *)context
{
    
    if ([keyPath isEqual:@"info"]) {
        
        self.venueInfo = [FSVenueLookup sharedInstance].info;
        
        self.title = [NSString stringWithFormat:@"%@", [[venueInfo valueForKey:@"venue"] valueForKey:@"name"]];
        
        [tableView reloadData];
    }
}

#pragma mark -
#pragma mark Memory management

- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Relinquish ownership any cached data, images, etc that aren't in use.
}

- (void)viewDidUnload {
    // Relinquish ownership of anything that can be recreated in viewDidLoad or on demand.
    // For example: self.myOutlet = nil;
}

- (void)dealloc {
    [super dealloc];
}


@end

